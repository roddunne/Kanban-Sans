argv = ['/usr/bin/node-waf', 'configure']
blddir = '/home/abrunet/git/kanban/node_modules/bcrypt/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': 0, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/home/abrunet/git/kanban/node_modules/bcrypt'
environ = {'npm_config_color': 'true', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_fetch_retry_factor': '10', 'npm_package_contributors_3_name': 'Ben Glow', 'npm_config_group': '1000', 'npm_config_browser': 'google-chrome', 'npm_config_global': '', 'npm_package_author_url': 'http://github.com/ncb000gt', 'npm_package_main': './bcrypt', 'npm_package_contributors_8_email': 'shtylman@gmail.com', 'SHELL': '/bin/bash', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/', 'MANDATORY_PATH': '/usr/share/gconf/ubuntu.mandatory.path', 'npm_config_user_agent': 'npm/1.1.34 node/v0.8.1', 'npm_config_pre': '', 'npm_config_cache': '/home/abrunet/.npm', 'MFLAGS': '', 'npm_config_tmp': '/home/abrunet/tmp', 'npm_package_engines_node': '>= 0.6.0', 'npm_config_argv': '{"remain":[],"cooked":["rebuild"],"original":["rebuild"]}', 'npm_config_cache_lock_wait': '10000', 'npm_package_contributors_7_email': 'lloyd@hilaiel.com', 'npm_package_contributors_6_email': 'vincentcr@gmail.com', 'npm_config_save_bundle': '', 'npm_config_save_dev': '', 'npm_package_contributors_7_name': 'Lloyd Hilaiel', 'npm_config_init_version': '0.0.0', 'DBUS_SESSION_BUS_ADDRESS': 'unix:abstract=/tmp/dbus-CC76XijIiZ,guid=275041c28ce7cfe7a9be4425000000b0', 'GNOME_KEYRING_PID': '1487', 'npm_lifecycle_event': 'install', 'npm_package_contributors_7_url': 'https://github.com/lloyd', 'DESKTOP_SESSION': 'ubuntu', 'GTK_MODULES': 'canberra-gtk-module:canberra-gtk-module', 'npm_config_init_author_name': '', 'npm_config_yes': '', 'npm_config_usage': '', 'npm_package_description': 'A bcrypt library for NodeJS.', 'npm_config_shell': '/bin/bash', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:', 'npm_config_ignore': '', 'npm_config_ca': '"-----BEGIN CERTIFICATE-----\\nMIIChzCCAfACCQDauvz/KHp8ejANBgkqhkiG9w0BAQUFADCBhzELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAkNBMRAwDgYDVQQHEwdPYWtsYW5kMQwwCgYDVQQKEwNucG0x\\nIjAgBgNVBAsTGW5wbSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxDjAMBgNVBAMTBW5w\\nbUNBMRcwFQYJKoZIhvcNAQkBFghpQGl6cy5tZTAeFw0xMTA5MDUwMTQ3MTdaFw0y\\nMTA5MDIwMTQ3MTdaMIGHMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExEDAOBgNV\\nBAcTB09ha2xhbmQxDDAKBgNVBAoTA25wbTEiMCAGA1UECxMZbnBtIENlcnRpZmlj\\nYXRlIEF1dGhvcml0eTEOMAwGA1UEAxMFbnBtQ0ExFzAVBgkqhkiG9w0BCQEWCGlA\\naXpzLm1lMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDLI4tIqPpRW+ACw9GE\\nOgBlJZwK5f8nnKCLK629Pv5yJpQKs3DENExAyOgDcyaF0HD0zk8zTp+ZsLaNdKOz\\nGn2U181KGprGKAXP6DU6ByOJDWmTlY6+Ad1laYT0m64fERSpHw/hjD3D+iX4aMOl\\ny0HdbT5m1ZGh6SJz3ZqxavhHLQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAC4ySDbC\\nl7W1WpLmtLGEQ/yuMLUf6Jy/vr+CRp4h+UzL+IQpCv8FfxsYE7dhf/bmWTEupBkv\\nyNL18lipt2jSvR3v6oAHAReotvdjqhxddpe5Holns6EQd1/xEZ7sB1YhQKJtvUrl\\nZNufy1Jf1r0ldEGeA+0ISck7s+xSh9rQD2Op\\n-----END CERTIFICATE-----"', 'npm_config_globalconfig': '/usr/etc/npmrc', 'npm_package_contributors_10_url': 'https://github.com/bnoordhuis', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'npm_package_contributors_2_email': 'david@dtrejo.com', 'npm_config_parseable': '', 'npm_package_contributors_1_email': 'the.gol.effect@gmail.com', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'npm_config_userignorefile': '/home/abrunet/.npmignore', 'USER': 'abrunet', 'npm_package_author_name': 'Nick Campbell', 'npm_package_contributors_0_url': 'https://github.com/Shadowfiend', 'npm_config_versions': '', 'XAUTHORITY': '/home/abrunet/.Xauthority', 'LANGUAGE': 'en_CA:en', 'SESSION_MANAGER': 'local/vaio:@/tmp/.ICE-unix/1497,unix/vaio:/tmp/.ICE-unix/1497', 'SHLVL': '1', 'npm_config_cache_lock_stale': '60000', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_cache_max': 'null', 'COMPIZ_CONFIG_PROFILE': 'ubuntu', 'WINDOWID': '52428806', 'GPG_AGENT_INFO': '/tmp/keyring-3PqeGj/gpg:0:1', 'npm_config_proxy': '', 'npm_config_depth': 'null', 'npm_config_umask': '022', 'npm_package_contributors_4_name': 'NewITFarmer.com', 'GDMSESSION': 'ubuntu', 'npm_package_contributors_9_name': 'Vadim Graboys', 'npm_config_long': '', 'npm_package_contributors_0_name': 'Antonio Salazar Cardozo', 'npm_config_editor': 'vi', 'XDG_SEAT_PATH': '/org/freedesktop/DisplayManager/Seat0', '_': '/usr/bin/npm', 'npm_package_repository_type': 'git', 'npm_package_contributors_1_name': 'Van Nguyen', 'npm_config_npat': '', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'npm_config_init_module': '/home/abrunet/.npm-init.js', 'UBUNTU_MENUPROXY': 'libappmenu.so', 'npm_config_json': '', 'npm_config_searchsort': 'name', 'npm_lifecycle_script': 'make build', 'COLORTERM': 'gnome-terminal', 'npm_config_git': 'git', 'npm_package_contributors_1_url': 'https://github.com/thegoleffect', 'npm_package_contributors_6_url': 'https://github.com/vincentcr', 'npm_package_readme': '"node.bcrypt.js\\n=============\\n\\n[![Build Status](https://secure.travis-ci.org/ncb000gt/node.bcrypt.js.png)](http://travis-ci.org/#!/ncb000gt/node.bcrypt.js) \\n\\nLib to help you hash passwords.\\n[bcrypt on wikipedia][bcryptwiki]\\n\\nCatalyst for this module: [How To Safely Store A Password][codahale]\\n\\n\\nSecurity Issues/Concerns\\n=============\\n\\nAs should be the case with any security tool, this library should be scrutinized by anyone using it. If you find or suspect an issue with the code- please bring it to my attention and I\'ll spend some time trying to make sure that this tool is as secure as possible.\\n\\nTo make it easier for people using this tool to analyze what has been surveyed, here is a list of BCrypt related security issues/concerns as they\'ve come up.\\n\\n* An [issue with passwords][jtr] was found with a version of the Blowfish algorithm developed for John the Ripper. This is not present in the OpenBSD version and is thus not a problem for this module. HT [zooko][zooko].\\n\\nDependencies\\n=============\\n\\n* NodeJS\\n* OpenSSL\\n\\nFrom NPM\\n============\\n\\nnpm install bcrypt\\n\\n\\nFrom Source\\n============\\n\\nAssuming you\'ve already built node, you can run the waf script:  \\n\\n    node-waf configure\\n    node-waf build\\n    npm link\\n\\nUsage - Sync\\n============\\n\\nTo hash a password:  \\n\\n    var bcrypt = require(\'bcrypt\');  \\n    var salt = bcrypt.genSaltSync(10);  \\n    var hash = bcrypt.encryptSync(\\"B4c0/\\\\/\\", salt);\\n    // Store hash in your password DB.\\n\\nTo check a password:  \\n\\n    // Load hash from your password DB.\\n    bcrypt.compareSync(\\"B4c0/\\\\/\\", hash); // true    \\n    bcrypt.compareSync(\\"not_bacon\\", hash); // false\\n\\nUsage - Async\\n============\\n\\nTo hash a password:  \\n\\n    var bcrypt = require(\'bcrypt\');  \\n    bcrypt.genSalt(10, function(err, salt) {\\n        bcrypt.hash(\\"B4c0/\\\\/\\", salt, function(err, hash) {\\n            // Store hash in your password DB.\\n        });\\n    });\\n\\nTo check a password:  \\n\\n    // Load hash from your password DB.\\n    bcrypt.compare(\\"B4c0/\\\\/\\", hash, function(err, res) {\\n        // res == true    \\n    });\\n    bcrypt.compare(\\"not_bacon\\", hash, function(err, res) {\\n        // res = false\\n    });\\n\\nAPI\\n============\\n\\n`BCrypt.`\\n\\n  * `genSaltSync(rounds, seed_length)`\\n    * `rounds` - [OPTIONAL] - the number of rounds to process the data for. (default - 10)\\n    * `seed_length` - [OPTIONAL] - RAND_bytes wants a length. to make that a bit flexible, you can specify a seed_length. (default - 20)\\n  * `genSalt(rounds, seed_length, cb)`\\n    * `rounds` - [OPTIONAL] - the number of rounds to process the data for. (default - 10)\\n    * `seed_length` - [OPTIONAL] - RAND_bytes wants a length. to make that a bit flexible, you can specify a seed_length. (default - 20)\\n    * `cb` - [REQUIRED] - a callback to be fired once the salt has been generated. uses eio making it asynchronous.\\n      * `err` - First parameter to the callback detailing any errors.\\n      * `salt` - Second parameter to the callback providing the generated salt.\\n  * `hashSync(data, salt)`\\n    * `data` - [REQUIRED] - the data to be encrypted.\\n    * `salt` - [REQUIRED] - the salt to be used in encryption.\\n  * `hash(data, salt, cb)`\\n    * `data` - [REQUIRED] - the data to be encrypted.\\n    * `salt` - [REQUIRED] - the salt to be used in encryption.\\n    * `cb` - [REQUIRED] - a callback to be fired once the data has been encrypted. uses eio making it asynchronous.\\n      * `err` - First parameter to the callback detailing any errors.\\n      * `encrypted` - Second parameter to the callback providing the encrypted form.\\n  * `compareSync(data, encrypted)`\\n    * `data` - [REQUIRED] - data to compare.\\n    * `encrypted` - [REQUIRED] - data to be compared to.\\n  * `compare(data, encrypted, cb)`\\n    * `data` - [REQUIRED] - data to compare.\\n    * `encrypted` - [REQUIRED] - data to be compared to.\\n    * `cb` - [REQUIRED] - a callback to be fired once the data has been compared. uses eio making it asynchronous.\\n      * `err` - First parameter to the callback detailing any errors.\\n      * `same` - Second parameter to the callback providing whether the data and encrypted forms match [true | false].\\n  * `getRounds(encrypted)` - return the number of rounds used to encrypt a given hash\\n    * `encrypted` - [REQUIRED] - hash from which the number of rounds used should be extracted.\\n\\n\\nHash Info\\n============\\n\\nThe characters that comprise the resultant hash are `./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$`.\\n\\nTesting\\n============\\n\\nI am using nodeunit. I like the way you write tests with it and I like the default output. As such you\'ll need it to run the tests. I suspect my tests would run on an older version, but these were written and worked against 0.5.1\\n\\n    npm install nodeunit@0.5.1\\n    nodeunit test/\\n\\nCredits\\n============\\n\\nThe code for this comes from a few sources:\\n\\n* blowfish.cc - OpenBSD\\n* bcrypt.cc - OpenBSD\\n* bcrypt::gen_salt - [gen_salt inclusion to bcrypt][bcryptgs]\\n* bcrypt_node.cc - me\\n\\nContributors\\n============\\n\\n* [Antonio Salazar Cardozo][shadowfiend] - Early MacOS X support (when we used libbsd)\\n* [Ben Glow][pixelglow] - Fixes for thread safety with async calls\\n* [Van Nguyen][thegoleffect] - Found a timing attack in the comparator\\n* [NewITFarmer][newitfarmer] - Initial Cygwin support\\n* [David Trejo][dtrejo] - packaging fixes\\n* [Alfred Westerveld][alfredwesterveld] - packaging fixes\\n* [Vincent C\xc3\xb4t\xc3\xa9-Roy][vincentr] - Testing around concurrency issues\\n* [Lloyd Hilaiel][lloyd] - Documentation fixes\\n* [Roman Shtylman][shtylman] - Code refactoring, general rot reduction, compile options, better memory management with delete and new, and an upgrade to libuv over eio/ev.\\n* [Vadim Graboys][vadimg] - Code changes to support 0.5.5+\\n* [Ben Noordhuis][bnoordhuis] - Fixed a thread safety issue in nodejs that was perfectly mappable to this module.\\n\\nLicense\\n============\\n\\nUnless stated elsewhere, file headers or otherwise, the license as stated in the LICENSE file.\\n\\n\\n\\n[bcryptwiki]: http://en.wikipedia.org/wiki/Crypt_(Unix)#Blowfish-based_scheme  \\n[bcryptgs]: http://mail-index.netbsd.org/tech-crypto/2002/05/24/msg000204.html\\n[codahale]: http://codahale.com/how-to-safely-store-a-password/\\n[gh13]: https://github.com/ncb000gt/node.bcrypt.js/issues/13\\n[jtr]: http://www.openwall.com/lists/oss-security/2011/06/20/2\\n\\n[shadowfiend]:https://github.com/Shadowfiend\\n[thegoleffect]:https://github.com/thegoleffect\\n[pixelglow]:https://github.com/pixelglow\\n[dtrejo]:https://github.com/dtrejo\\n[alfredwesterveld]:https://github.com/alfredwesterveld\\n[newitfarmer]:https://github.com/newitfarmer\\n[zooko]:https://twitter.com/zooko\\n[vincentr]:https://twitter.com/vincentcr\\n[lloyd]:https://github.com/lloyd\\n[shtylman]:https://github.com/shtylman\\n[vadimg]:https://github.com/vadimg\\n"', 'npm_config_rollback': 'true', 'npm_package_repository_url': 'git://github.com/ncb000gt/node.bcrypt.js.git', 'npm_package_contributors_5_url': 'https://github.com/alfredwesterveld', 'HOME': '/home/abrunet', 'DISPLAY': ':0', 'npm_config_save_optional': '', 'LANG': 'en_CA.UTF-8', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_message': '%s', 'npm_config_always_auth': '', 'npm_config_prefix': '/usr', 'npm_package_devDependencies_nodeunit': '>=0.6.4', 'npm_config_searchexclude': '', 'npm_config_loglevel': 'http', 'USERNAME': 'abrunet', 'npm_package_contributors_8_url': 'https://github.com/shtylman', 'npm_package_scripts_test': 'make test', 'npm_config_strict_ssl': 'true', 'COMP_WORDBREAKS': ' \t\n"\'><;|&(:', 'npm_package_contributors_2_url': 'https://github.com/dtrejo', 'npm_package_keywords_3': 'authentication', 'npm_package_keywords_0': 'bcrypt', 'npm_package_keywords_1': 'password', 'npm_package_keywords_6': 'crypto', 'npm_package_keywords_4': 'encryption', 'npm_package_keywords_5': 'crypt', 'npm_package_contributors_2_name': 'David Trejo', 'npm_package_contributors_5_email': 'alfredwesterveld@gmail.com', 'npm_config_tag': 'latest', 'npm_package_licenses_0_type': 'MIT', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'npm_package_contributors_3_url': 'https://github.com/pixelglow', 'npm_config_globalignorefile': '/usr/etc/npmignore', 'MAKELEVEL': '1', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_package_bugs_url': 'http://github.com/ncb000gt/node.bcrypt.js/issues', 'npm_package_contributors_0_email': 'savedfastcool@gmail.com', 'npm_config_force': '', 'LOGNAME': 'abrunet', 'npm_config_user': '', 'npm_config_link': '', 'npm_package_contributors_9_url': 'https://github.com/vadimg', 'npm_package_name': 'bcrypt', 'npm_config_userconfig': '/home/abrunet/.npmrc', 'npm_package_scripts_install': 'make build', 'XDG_CURRENT_DESKTOP': 'Unity', 'npm_config_dev': '', 'npm_package_contributors_10_name': 'Ben Noorduis', 'npm_config_rebuild_bundle': 'true', 'npm_config_version': '', 'npm_config_username': '', 'npm_package_contributors_6_name': 'Vincent C\xc3\xb4t\xc3\xa9-Roy', 'GNOME_KEYRING_CONTROL': '/tmp/keyring-3PqeGj', 'PATH': '/usr/lib/nodejs/npm/bin/node-gyp-bin:/home/abrunet/git/kanban/node_modules/bcrypt/node_modules/.bin:/home/abrunet/git/kanban/node_modules/.bin:/home/abrunet/bin:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games', 'npm_package_contributors_5_name': 'Alfred Westerveld', 'npm_config_coverage': '', 'SSH_AGENT_PID': '1530', 'npm_config_proprietary_attribs': 'true', 'XDG_SESSION_PATH': '/org/freedesktop/DisplayManager/Session0', 'npm_config_node_version': '0.8.1', 'npm_config_onload_script': '', 'DEFAULTS_PATH': '/usr/share/gconf/ubuntu.default.path', 'npm_config_description': 'true', 'npm_package_contributors_8_name': 'Roman Shtylman', 'MAKEFLAGS': '', 'npm_config_cache_lock_retries': '10', 'npm_config_fetch_retry_mintimeout': '10000', 'npm_config_viewer': 'man', 'npm_package_contributors_9_email': 'dimva13@gmail.com', 'npm_config_fetch_retries': '2', 'npm_config_unsafe_perm': 'true', 'npm_package_contributors_4_url': 'https://github.com/newitfarmer', 'SSH_AUTH_SOCK': '/tmp/keyring-3PqeGj/ssh', 'TERM': 'xterm', 'npm_package_version': '0.5.0', 'npm_config_https_proxy': '', 'XDG_SESSION_COOKIE': '4437f2af9fd418eeeb87b04e00000007-1341066927.289-1340620851', 'npm_config_init_author_email': '', 'npm_package_keywords_2': 'auth', 'npm_package_contributors_3_email': 'glen.low@pixelglow.com', 'OLDPWD': '/home/abrunet/git', 'npm_config_outfd': '1', 'NODE_PATH': '/usr/lib/nodejs:/usr/share/javascript', 'PWD': '/home/abrunet/git/kanban/node_modules/bcrypt', 'npm_config_cache_min': ''}
files = []
hash = 0
options = {'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'jobs': 2, 'srcdir': '', 'check_cxx_compiler': 'g++ icpc sunc++', 'check_c_compiler': 'gcc icc suncc'}
srcdir = '/home/abrunet/git/kanban/node_modules/bcrypt'
